.group {
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  box-sizing: border-box;
  font-synthesis: none;
  isolation: isolate;
  margin: 0;
  padding: 0;
  text-rendering: optimizeLegibility;
}

:where(html) {
  --gap-1: 0.4em;
  --gap-2: 0.6em;
  --gap-3: 0.8em;
  --gap-4: 1em;
  --gap-5: 1.2em;
  --ratio-square: 1;
  --ratio-portrait: 9/16;
  --ratio-landscape: 16/9;
  --ratio-ultrawide: 18/5;
  --group-content-whitespace: var(--gap-3);
  --group-actions-whitespace: var(--gap-1) var(--gap-3);
  --group-min-height: 20vh;
  --group-accent: #09f;
  --group-accent-error: #f09;
  --group-bg: var(--white);
  --group-content-color: #6b7280;
  --group-actions-bg: #f3f4f6;
  --group-actions-color: #9ca3af;
  --group-odd-bg: rgba(0, 0, 0, 0.2);
  --group-selection-bg: var(--group-actions-bg);
  --group-selection-color: var(--group-accent);
  --group-shadow-color: 220 3% 15%;
  --group-shadow-strength: 1%;
  --group-shadow: 0 3px 5px -2px hsl(var(--group-shadow-color) /
          calc(var(--group-shadow-strength) + 3%)),
    0 7px 14px -5px hsl(var(--group-shadow-color) /
          calc(var(--group-shadow-strength) + 5%));
  --group-border-width: 0.15em;
  --group-border-color: #e5e7eb;
  --group-border-radius: 0.4em;
  --group-border: var(--group-border-width) solid var(--group-border-color);
}

.card {
  background-color: var(--group-bg);
  border: var(--group-border);
  box-shadow: var(--group-shadow);
  hyphens: auto;
  position: relative;
  word-break: break-word;
}
.card,
.card div:first-of-type {
  display: flex;
  flex-direction: column;
}
.card div:first-of-type {
  flex-grow: 1;
  gap: var(--gap-3);
  padding: var(--group-content-whitespace);
}
.card div:last-of-type:not(:only-of-type) {
  margin-top: auto;
  padding: var(--group-content-whitespace);
}
.card div:last-of-type:not(:only-of-type) button + * {
  margin-left: auto;
}
.card img,
.card picture {
  width: 100%;
}
.card img {
  background-repeat: no-repeat;
  border: 0;
  border-style: none;
  height: auto;
  max-width: 100%;
  object-fit: cover;
}
.card::selection {
  background-color: var(--group-selection-bg);
  color: var(--group-selection-color);
}
@supports (aspect-ratio: 1) {
  .card {
    aspect-ratio: var(--ratio-square);
  }
  .card\:landscape {
    aspect-ratio: var(--ratio-landscape);
  }
  .card\:portrait {
    aspect-ratio: var(--ratio-portrait);
  }
  .card\:ultrawide {
    aspect-ratio: var(--ratio-ultrawide);
  }
}
@supports not (selector(:has(*))) {
  .card h2 + p {
    margin-top: var(--gap-3);
  }
}
@supports selector(:has(*)) {
  .card h2:has(+ p) {
    margin-bottom: var(--gap-3);
  }
  .card:has(img),
  .card:has(img) div {
    padding: var(--zero);
  }
  .card:has(img) picture {
    display: flex;
    flex-grow: 1;
    position: relative;
    width: 100%;
  }
  .card:has(img) picture + div {
    padding: var(--group-content-whitespace);
  }
}
.item {
  --item-gap: var(--gap-1);
  --item-slot-width: 48px;
  grid-gap: var(--item-gap);
  display: grid;
  gap: var(--item-gap);
  grid-template-columns: 1fr;
  height: max-content;
  padding: var(--group-actions-whitespace);
  width: 100%;
}
.item > :not(.start, .end) {
  grid-gap: var(--gap-2);
  display: grid;
  gap: var(--gap-2);
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.item > .end,
.item > .start {
  align-items: center;
  display: grid;
  justify-items: center;
  overflow: visible;
  place-items: center;
}
.item > .start {
  padding-right: 0;
}
.item > .end {
  padding-left: 0;
}
@supports not (selector(:has(*))) {
  .item.item\:start\:end {
    grid-template-columns: var(--item-slot-width) 1fr var(--item-slot-width);
  }
  .item.item\:start {
    grid-template-columns: var(--item-slot-width) 1fr;
  }
  .item.item\:end {
    grid-template-columns: 1fr var(--item-slot-width);
  }
}
@supports selector(:has(*)) {
  .item:has(.start) {
    grid-template-columns: var(--item-slot-width) 1fr;
  }
  .item:has(.end) {
    grid-template-columns: 1fr var(--item-slot-width);
  }
  .item:has(.start):has(.end) {
    grid-template-columns: var(--item-slot-width) 1fr var(--item-slot-width);
  }
  .item:has(.end) div:first-child,
  .item:has(.start) div:nth-child(2),
  .item > div:only-child {
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}
.list {
  --list-gap: var(--gap-2);
  border: var(--group-border);
  box-shadow: var(--group-shadow);
  height: max-content;
  list-style: none;
  width: 100%;
}
.list > .item:not(:last-child) {
  border-bottom: var(--group-border);
}
.list > .item.list\:divider {
  margin-bottom: -0.5em !important;
  margin-top: -0.5em !important;
}
.list > .item > div:not(.start, .end) > :not(:first-child) {
  font-size: 85%;
  overflow: inherit;
  text-overflow: inherit;
  white-space: normal;
}
@supports not (selector(:has(*))) {
  .list > .item.list\:item\:start\:end {
    grid-template-columns: 48px 1fr 48px;
  }
  .list > .item.list\:item\:start {
    grid-template-columns: 48px 1fr;
  }
  .list > .item.list\:item\:end {
    grid-template-columns: 1fr 48px;
  }
}
@supports selector(:has(*)) {
  .list .item:has(.end) div:first-child > :not(:first-child),
  .list .item:has(.start) div:nth-child(2) > :not(:first-child),
  .list .item > div:only-child > :not(:first-child) {
    font-size: 85%;
    overflow: inherit;
    text-overflow: inherit;
    white-space: normal;
  }
}
.panel {
  background-color: var(--group-bg);
  border: var(--group-border);
  box-shadow: var(--group-shadow);
  display: flex;
  flex-direction: column;
}
.panel:hover {
  border: var(--group-border-width) solid var(--accent-error) !important;
}
.panel:focus-within {
  box-shadow: 0 0 0 4px var(--accent);
}
.panel svg {
  fill: var(--group-actions-color);
}
.panel > ::-webkit-input-placeholder {
  color: currentColor;
}
.panel > ::-ms-input-placeholder {
  color: currentColor;
}
.panel > div:first-of-type {
  min-height: var(--group-min-height);
  padding: var(--group-content-whitespace);
}
.panel > div:first-of-type > :not(:first-child) {
  color: var(--group-content-color);
  margin-top: var(--gap-3);
}
.panel > div:first-of-type > :last-child {
  margin-bottom: var(--gap-3);
}
.panel > div:last-of-type:not(:only-of-type) {
  background-color: var(--group-actions-bg);
  border-top: var(--group-border);
  flex-direction: column;
  margin-top: auto;
  padding: var(--group-content-whitespace);
}
.panel > div.reorder\:top:last-of-type:not(:only-of-type) {
  border-bottom: var(--group-border);
  border-top: none;
}
.panel > div:last-of-type:not(:only-of-type) > p {
  color: var(--group-actions-color);
  font-size: 85%;
  font-weight: 500;
  letter-spacing: 0.05em;
  margin-bottom: var(--gap-1);
  text-transform: uppercase;
}
.panel > div:last-of-type:not(:only-of-type) > div {
  display: flex;
  width: 100%;
}
.panel > div:last-of-type:not(:only-of-type) > div * + * {
  margin-left: auto;
}
.view {
  --view-gap: max(1rem, min(6vw, 3rem));
  --view-full: minmax(var(--view-gap), 1fr);
  --view-content: min(50ch, 100% - var(--view-gap) * 2);
  --view-popout: minmax(0, 2rem);
  --view-feature: minmax(0, 5rem);
  display: grid;
  grid-template-columns:
    [full-start] var(--view-full) [feature-start] var(--view-feature)
    [popout-start] var(--view-popout) [content-start] var(--view-content) [content-end] var(
      --view-popout
    )
    [popout-end] var(--view-feature) [feature-end] var(--view-full) [full-end];
}
.view > * {
  grid-column: content;
}
.view\:popout {
  grid-column: popout;
}
.view\:feature {
  grid-column: feature;
}
.view\:full {
  border-radius: 0;
  border-radius: initial;
  grid-column: full;
}
:where(.view > *) {
  align-items: center;
  border-radius: var(--border-radius);
  display: grid;
  justify-items: center;
  min-height: var(--minHeightUserAction);
  place-items: center;
}
